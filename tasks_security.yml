---
# Generated by 'openssl passwd -salt lol -1 <clear-text-pwd>'
- name: Change root password
  user:
    name: root
    password: '{{ root_pwd_hash }}'

- name: Setup hostname
  hostname:
    name: '{{ hostname | regex_replace("\.", "_") }}'

- name: Add EPEL repository
  yum:
    name: epel-release

- name: Run full upgrade
  yum:
    name: '*'
    state: latest

- name: Install base packages
  yum:
    name: net-tools, wget, curl, lsof, vim, ncdu, htop, telnet, bash-completion, zip, unzip, libaio, bc, flex, git

- name: Disable useless services
  service:
    name: '{{ item }}'
    enabled: no
    state: stopped
  with_items:
    - postfix
  ignore_errors: yes

- name: Uninstall useless services
  yum:
    name: '{{ item }}'
    state: absent
  with_items:
    - postfix

- name: Set user
  user:
    name: '{{ user }}'

- name: Set key for user
  authorized_key:
    user: '{{ user }}'
    key: '{{ lookup("file", "keys/" + hostname + ".pub") }}'

- name: Set .bashrc for root
  copy:
    src: files/bashrc.root
    dest: /root/.bashrc
    force: yes

- name: Set .bashrc for user
  copy:
    src: files/bashrc.user
    dest: /home/{{ user }}/.bashrc
    force: yes

- name: Assign /opt to user
  file:
    path: /opt
    state: directory
    owner: '{{ user }}'
    group: '{{ user }}'
    recurse: yes

- name: Open sshd port
  seport:
    setype: ssh_port_t
    ports: 22,{{ ssh_port }}
    proto: tcp
    state: present

- name: Configure sshd
  replace:
    dest: /etc/ssh/sshd_config
    regexp:  '{{ item.regexp }}'
    replace: '{{ item.line }}'
  with_items:
    - { regexp: '^#?Port.*',                            line: 'Port {{ ssh_port }}' }
    - { regexp: '^#?Protocol.*',                        line: 'Protocol 2' }
    - { regexp: '^#?LoginGraceTime.*',                  line: 'LoginGraceTime 30' }
    - { regexp: '^#?PermitRootLogin.*',                 line: 'PermitRootLogin no' }
    - { regexp: '^#?RSAAuthentication.*',               line: 'RSAAuthentication no' }
    - { regexp: '^#?PubkeyAuthentication.*',            line: 'PubkeyAuthentication yes' }
    - { regexp: '^#?PasswordAuthentication.*',          line: 'PasswordAuthentication no' }
    - { regexp: '^#?ChallengeResponseAuthentication.*', line: 'ChallengeResponseAuthentication no' }
    - { regexp: '^#?GSSAPIAuthentication.*',            line: 'GSSAPIAuthentication no' }
    - { regexp: '^#?AllowTcpForwarding.*',              line: 'AllowTcpForwarding yes' }
    - { regexp: '^#?X11Forwarding.*',                   line: 'X11Forwarding no' }
    - { regexp: '^#?UseDNS.*',                          line: 'UseDNS no' }

- name: Restart sshd
  service:
    name: sshd
    state: restarted
