---
- name: Initial basic configuration for fresh machines

  hosts: to_provision

  vars_files:
    - files/pgpass.yml

  vars:
    user: odarroc
    java_version: jdk1.8.0_66

  tasks:

  # Generated by 'openssl passwd -salt datapine -1 <clear-text-pwd>'
  - name: Change root password
    user:
      name: root
      password: '{{ root_pwd_hash }}'

  - name: Setup hostname
    hostname:
      name: '{{ hostname | regex_replace("\.", "_") }}'

  - name: Run a full upgrade
    yum:
      name: '*'
      state: latest

  - name: EPEL repository
    yum:
      name: epel-release

  - name: Base packages
    yum:
      name: net-tools,wget,curl,lsof,vim,ncdu,htop,telnet,bash-completion,zip,unzip,libaio,bc,flex,haveged,nginx

  - name: Disable useless services
    service:
      name: '{{ item }}'
      state: stopped
      enabled: no
    with_items:
      - postfix
#      - avahi-daemon.socket
#      - avahi-daemon.service
    ignore_errors: yes

  - name: Uninstall useless services
    yum:
      name: '{{ item }}'
      state: absent
    with_items:
      - postfix
#      - avahi
#      - avahi-libs
#      - avahi-autoipd

  - name: Enable userful services
    service:
      name: '{{ item }}'
      state: started
      enabled: yes
    with_items:
      - haveged
      - nginx

  - name: Set user
    user:
      name: '{{ user }}'

  - name: Set key for user
    authorized_key:
      user: '{{ user }}'
      key: '{{ lookup("file", "keys/" + hostname + ".pub") }}'

  - name: Set .bashrc
    copy:
      src: files/bashrc
      dest: '{{ item }}'
      force: yes
    with_items:
      - /root/.bashrc
      - /home/{{ user }}/.bashrc

  - name: PostgreSQL Repository
    yum:
      name: http://yum.postgresql.org/9.4/redhat/rhel-7-x86_64/pgdg-centos94-9.4-2.noarch.rpm

  - name: Install PostgreSQL
    yum:
      name: postgresql94-server,postgresql94-libs,postgresql94-contrib

  - name: Setup PostgreSQL
    command: /usr/pgsql-9.4/bin/initdb --encoding=UTF8 --locale=C --auth-host=md5 --auth-local=peer -D /var/lib/pgsql/9.4/data
    args:
      creates: /var/lib/pgsql/9.4/data/postgresql.conf
    become: yes
    become_user: postgres

  - name: Enable PostgreSQL
    service:
      name: postgresql-9.4
      state: started
      enabled: yes

  - name: Set PostgreSQL password
    command: psql -U postgres -c "alter user postgres with password '{{ pgpass }}';"
    become: yes
    become_user: postgres

  - name: Install JDK
    unarchive:
      src: https://s3.eu-central-1.amazonaws.com/ansible.repo/{{ java_version }}.tar.gz
      dest: /opt
      copy: no
      owner: '{{ user }}'
      group: '{{ user }}'
      creates: /opt/{{ java_version }}

  - name: Set JAVA_HOME
    lineinfile:
      dest: /etc/environment
      regexp: ^JAVA_HOME
      line: JAVA_HOME=/opt/{{ java_version }}

  - name: Install TeamCity
    unarchive:
      src: https://d1opms6zj7jotq.cloudfront.net/teamcity/TeamCity-9.1.4.tar.gz
      dest: /opt
      copy: no
      owner: '{{ user }}'
      group: '{{ user }}'
      creates: /opt/TeamCity

  - name: JDBC mkdir
    file:
      path: /home/{{ user }}/.BuildServer/lib/jdbc
      state: directory
      owner: '{{ user }}'
      group: '{{ user }}'

  - name: Copy JDBC Driver
    get_url:
      url: https://jdbc.postgresql.org/download/postgresql-9.4-1206-jdbc42.jar
      dest: /home/{{ user }}/.BuildServer/lib/jdbc
      owner: '{{ user }}'
      group: '{{ user }}'

  - name: Setup sshd
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '{{ item.regexp }}'
      line:   '{{ item.line }}'
    with_items:
      - { regexp: '^#?Port',                            line: 'Port 22' }
      - { regexp: '^#?Protocol',                        line: 'Protocol 2' }
      - { regexp: '^#?LoginGraceTime',                  line: 'LoginGraceTime 30' }
      - { regexp: '^#?PermitRootLogin',                 line: 'PermitRootLogin yes' }
      - { regexp: '^#?RSAAuthentication',               line: 'RSAAuthentication no' }
      - { regexp: '^#?PubkeyAuthentication',            line: 'PubkeyAuthentication yes' }
      - { regexp: '^#?PasswordAuthentication',          line: 'PasswordAuthentication yes' }
      - { regexp: '^#?ChallengeResponseAuthentication', line: 'ChallengeResponseAuthentication no' }
      - { regexp: '^#?GSSAPIAuthentication',            line: 'GSSAPIAuthentication no' }
      - { regexp: '^#?AllowTcpForwarding',              line: 'AllowTcpForwarding no' }
      - { regexp: '^#?X11Forwarding',                   line: 'X11Forwarding no' }
      - { regexp: '^#?UseDNS',                          line: 'UseDNS no' }
    notify:
      - restart sshd

  handlers:
  - name: restart sshd
    service:
      name: sshd
      state: restarted
