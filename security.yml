---
# Generated by 'openssl passwd -salt datapine -1 <clear-text-pwd>'
- name: Change root password
  user:
    name: root
    password: '{{ root_pwd_hash }}'

- name: Setup hostname
  hostname:
    name: '{{ hostname | regex_replace("\.", "_") }}'

- name: Run full upgrade
  yum:
    name: '*'
    state: latest

- name: Add EPEL repository
  yum:
    name: epel-release

- name: Install base packages
  yum:
    name: net-tools, wget, curl, lsof, vim, ncdu, htop, telnet, bash-completion, zip, unzip, libaio, bc, flex

- name: Disable useless services
  service:
    name: '{{ item }}'
    enabled: no
    state: stopped
  with_items:
    - postfix
#    - avahi-daemon.socket
#    - avahi-daemon.service
  ignore_errors: yes

- name: Uninstall useless services
  yum:
    name: '{{ item }}'
    state: absent
  with_items:
    - postfix
#    - avahi
#    - avahi-libs
#    - avahi-autoipd

- name: Set user
  user:
    name: '{{ user }}'

- name: Set key for user
  authorized_key:
    user: '{{ user }}'
    key: '{{ lookup("file", "keys/" + hostname + ".pub") }}'

- name: Set .bashrc
  copy:
    src: files/bashrc
    dest: '{{ item }}'
    force: yes
  with_items:
    - /root/.bashrc
    - /home/{{ user }}/.bashrc

- name: Configure sshd
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '{{ item.regexp }}'
    line:   '{{ item.line }}'
  with_items:
    - { regexp: '^#?Port',                            line: 'Port 22' }
    - { regexp: '^#?Protocol',                        line: 'Protocol 2' }
    - { regexp: '^#?LoginGraceTime',                  line: 'LoginGraceTime 30' }
    - { regexp: '^#?PermitRootLogin',                 line: 'PermitRootLogin yes' }
    - { regexp: '^#?RSAAuthentication',               line: 'RSAAuthentication no' }
    - { regexp: '^#?PubkeyAuthentication',            line: 'PubkeyAuthentication yes' }
    - { regexp: '^#?PasswordAuthentication',          line: 'PasswordAuthentication no' }
    - { regexp: '^#?ChallengeResponseAuthentication', line: 'ChallengeResponseAuthentication no' }
    - { regexp: '^#?GSSAPIAuthentication',            line: 'GSSAPIAuthentication no' }
    - { regexp: '^#?AllowTcpForwarding',              line: 'AllowTcpForwarding no' }
    - { regexp: '^#?X11Forwarding',                   line: 'X11Forwarding no' }
    - { regexp: '^#?UseDNS',                          line: 'UseDNS no' }
  notify:
    - Restart sshd

handlers:
- name: Restart sshd
  service:
    name: sshd
    state: restarted
